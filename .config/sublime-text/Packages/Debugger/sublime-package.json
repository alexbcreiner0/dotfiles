{
  "contributions": {
    "settings": [
      {
        "schema": {
          "$id": "sublime://settings/debugger",
          "definitions": {
            "type": {
              "properties": {
                "type": {
                  "type": "string",
                  "description": "Type of configuration.",
                  "enum": [
                    "lldb",
                    "gdb",
                    "chrome",
                    "node",
                    "msedge",
                    "debugpy",
                    "python",
                    "java",
                    "go",
                    "php",
                    "rdbg",
                    "ruby",
                    "ruby-debug",
                    "elixir",
                    "mix_task",
                    "lua-local",
                    "firefox",
                    "mock",
                    "sublime",
                    "emulicious-debugger"
                  ]
                }
              },
              "required": [
                "type"
              ]
            },
            "type_installed": {
              "properties": {
                "type": {
                  "type": "string",
                  "description": "Type of configuration.",
                  "enum": [
                    "debugpy",
                    "python"
                  ],
                  "errorMessage": "This adapter is not installed, install this adapter to get completions"
                }
              },
              "required": [
                "type"
              ]
            },
            "debugpy": {
              "properties": {
                "request": {
                  "type": "string",
                  "description": "Request type of configuration.",
                  "enum": [
                    "attach",
                    "launch"
                  ]
                },
                "name": {
                  "type": "string",
                  "description": "Name of configuration which appears in the launch configuration drop down menu."
                }
              },
              "required": [
                "type",
                "name",
                "request"
              ]
            },
            "debugpy.attach": {
              "properties": {
                "connect": {
                  "label": "Attach by connecting to debugpy over a socket.",
                  "properties": {
                    "host": {
                      "default": "127.0.0.1",
                      "description": "Hostname or IP address to connect to.",
                      "type": "string"
                    },
                    "port": {
                      "description": "Port to connect to.",
                      "type": [
                        "number",
                        "string"
                      ]
                    }
                  },
                  "required": [
                    "port"
                  ],
                  "type": "object"
                },
                "debugAdapterPath": {
                  "description": "Path (fully qualified) to the python debug adapter executable.",
                  "type": "string"
                },
                "django": {
                  "default": false,
                  "description": "Django debugging.",
                  "type": "boolean"
                },
                "jinja": {
                  "default": null,
                  "description": "Jinja template debugging (e.g. Flask).",
                  "enum": [
                    false,
                    null,
                    true
                  ]
                },
                "justMyCode": {
                  "default": true,
                  "description": "If true, show and debug only user-written code. If false, show and debug all code, including library calls.",
                  "type": "boolean"
                },
                "listen": {
                  "label": "Attach by listening for incoming socket connection from debugpy",
                  "properties": {
                    "host": {
                      "default": "127.0.0.1",
                      "description": "Hostname or IP address of the interface to listen on.",
                      "type": "string"
                    },
                    "port": {
                      "description": "Port to listen on.",
                      "type": [
                        "number",
                        "string"
                      ]
                    }
                  },
                  "required": [
                    "port"
                  ],
                  "type": "object"
                },
                "logToFile": {
                  "default": false,
                  "description": "Enable logging of debugger events to a log file. This file can be found in the debugpy extension install folder.",
                  "type": "boolean"
                },
                "pathMappings": {
                  "default": [],
                  "items": {
                    "label": "Path mapping",
                    "properties": {
                      "localRoot": {
                        "default": "${workspaceFolder}",
                        "label": "Local source root.",
                        "type": "string"
                      },
                      "remoteRoot": {
                        "default": "",
                        "label": "Remote source root.",
                        "type": "string"
                      }
                    },
                    "required": [
                      "localRoot",
                      "remoteRoot"
                    ],
                    "type": "object"
                  },
                  "label": "Path mappings.",
                  "type": "array"
                },
                "processId": {
                  "anyOf": [
                    {
                      "default": "${command:pickProcess}",
                      "description": "Use process picker to select a process to attach, or Process ID as integer.",
                      "enum": [
                        "${command:pickProcess}"
                      ]
                    },
                    {
                      "description": "ID of the local process to attach to.",
                      "type": "integer"
                    }
                  ]
                },
                "redirectOutput": {
                  "default": true,
                  "description": "Redirect output.",
                  "type": "boolean"
                },
                "showReturnValue": {
                  "default": true,
                  "description": "Show return value of functions when stepping.",
                  "type": "boolean"
                },
                "subProcess": {
                  "default": false,
                  "description": "Whether to enable Sub Process debugging",
                  "type": "boolean"
                },
                "consoleName": {
                  "default": "Python Debug Console",
                  "description": "Display name of the debug console or terminal",
                  "type": "string"
                },
                "pre_debug_task": {
                  "type": "string",
                  "description": "Name of task to run before debugging starts"
                },
                "post_debug_task": {
                  "type": "string",
                  "description": "name of task to run after debugging ends"
                },
                "osx": {
                  "$ref": "sublime://settings/debugger#/definitions/debugpy.attach",
                  "description": "MacOS specific configuration attributes"
                },
                "windows": {
                  "$ref": "sublime://settings/debugger#/definitions/debugpy.attach",
                  "description": "Windows specific configuration attributes"
                },
                "linux": {
                  "$ref": "sublime://settings/debugger#/definitions/debugpy.attach",
                  "description": "Linux specific configuration attributes"
                }
              },
              "type": "object"
            },
            "debugpy.launch": {
              "properties": {
                "args": {
                  "default": [],
                  "description": "Command line arguments passed to the program. For string type arguments, it will pass through the shell as is, and therefore all shell variable expansions will apply. But for the array type, the values will be shell-escaped.",
                  "items": {
                    "type": "string"
                  },
                  "anyOf": [
                    {
                      "default": "${command:pickArgs}",
                      "enum": [
                        "${command:pickArgs}"
                      ]
                    },
                    {
                      "type": [
                        "array",
                        "string"
                      ]
                    }
                  ]
                },
                "autoReload": {
                  "default": {},
                  "description": "Configures automatic reload of code on edit.",
                  "properties": {
                    "enable": {
                      "default": false,
                      "description": "Automatically reload code on edit.",
                      "type": "boolean"
                    },
                    "exclude": {
                      "default": [
                        "**/.git/**",
                        "**/.metadata/**",
                        "**/__pycache__/**",
                        "**/node_modules/**",
                        "**/site-packages/**"
                      ],
                      "description": "Glob patterns of paths to exclude from auto reload.",
                      "items": {
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "include": {
                      "default": [
                        "**/*.py",
                        "**/*.pyw"
                      ],
                      "description": "Glob patterns of paths to include in auto reload.",
                      "items": {
                        "type": "string"
                      },
                      "type": "array"
                    }
                  },
                  "type": "object"
                },
                "console": {
                  "default": "integratedTerminal",
                  "description": "Where to launch the debug target: internal console, integrated terminal, or external terminal.",
                  "enum": [
                    "externalTerminal",
                    "integratedTerminal",
                    "internalConsole"
                  ]
                },
                "cwd": {
                  "default": "${workspaceFolder}",
                  "description": "Absolute path to the working directory of the program being debugged. Default is the root directory of the file (leave empty).",
                  "type": "string"
                },
                "debugAdapterPath": {
                  "description": "Path (fully qualified) to the Python debug adapter executable.",
                  "type": "string"
                },
                "autoStartBrowser": {
                  "default": false,
                  "description": "Open external browser to launch the application",
                  "type": "boolean"
                },
                "django": {
                  "default": false,
                  "description": "Django debugging.",
                  "type": "boolean"
                },
                "env": {
                  "additionalProperties": {
                    "type": "string"
                  },
                  "default": {},
                  "description": "Environment variables defined as a key value pair. Property ends up being the Environment Variable and the value of the property ends up being the value of the Env Variable.",
                  "type": "object"
                },
                "envFile": {
                  "default": "${workspaceFolder}/.env",
                  "description": "Absolute path to a file containing environment variable definitions.",
                  "type": "string"
                },
                "gevent": {
                  "default": false,
                  "description": "Enable debugging of gevent monkey-patched code.",
                  "type": "boolean"
                },
                "jinja": {
                  "default": null,
                  "description": "Jinja template debugging (e.g. Flask).",
                  "enum": [
                    false,
                    null,
                    true
                  ]
                },
                "justMyCode": {
                  "default": true,
                  "description": "Debug only user-written code.",
                  "type": "boolean"
                },
                "logToFile": {
                  "default": false,
                  "description": "Enable logging of debugger events to a log file. This file can be found in the debugpy extension install folder.",
                  "type": "boolean"
                },
                "module": {
                  "default": "",
                  "description": "Name of the module to be debugged.",
                  "type": "string"
                },
                "pathMappings": {
                  "default": [],
                  "items": {
                    "label": "Path mapping",
                    "properties": {
                      "localRoot": {
                        "default": "${workspaceFolder}",
                        "label": "Local source root.",
                        "type": "string"
                      },
                      "remoteRoot": {
                        "default": "",
                        "label": "Remote source root.",
                        "type": "string"
                      }
                    },
                    "required": [
                      "localRoot",
                      "remoteRoot"
                    ],
                    "type": "object"
                  },
                  "label": "Path mappings.",
                  "type": "array"
                },
                "program": {
                  "default": "${file}",
                  "description": "Absolute path to the program.",
                  "type": "string"
                },
                "purpose": {
                  "default": [],
                  "description": "Tells extension to use this configuration for test debugging, or when using debug-in-terminal command.",
                  "items": {
                    "enum": [
                      "debug-test",
                      "debug-in-terminal"
                    ],
                    "enumDescriptions": [
                      "Use this configuration while debugging tests using test view or test debug commands.",
                      "Use this configuration while debugging a file using debug in terminal button in the editor."
                    ]
                  },
                  "type": "array"
                },
                "pyramid": {
                  "default": false,
                  "description": "Whether debugging Pyramid applications.",
                  "type": "boolean"
                },
                "python": {
                  "default": "${command:python.interpreterPath}",
                  "description": "Absolute path to the Python interpreter executable; overrides workspace configuration if set.",
                  "type": "string"
                },
                "pythonArgs": {
                  "default": [],
                  "description": "Command-line arguments passed to the Python interpreter. To pass arguments to the debug target, use \"args\".",
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                "redirectOutput": {
                  "default": true,
                  "description": "Redirect output.",
                  "type": "boolean"
                },
                "showReturnValue": {
                  "default": true,
                  "description": "Show return value of functions when stepping.",
                  "type": "boolean"
                },
                "stopOnEntry": {
                  "default": false,
                  "description": "Automatically stop after launch.",
                  "type": "boolean"
                },
                "subProcess": {
                  "default": false,
                  "description": "Whether to enable Sub Process debugging.",
                  "type": "boolean"
                },
                "sudo": {
                  "default": false,
                  "description": "Running debug program under elevated permissions (on Unix).",
                  "type": "boolean"
                },
                "guiEventLoop": {
                  "default": "matplotlib",
                  "description": "The GUI event loop that's going to run. Possible values: \"matplotlib\", \"wx\", \"qt\", \"none\", or a custom function that'll be imported and run.",
                  "type": "string"
                },
                "consoleName": {
                  "default": "Python Debug Console",
                  "description": "Display name of the debug console or terminal",
                  "type": "string"
                },
                "pre_debug_task": {
                  "type": "string",
                  "description": "Name of task to run before debugging starts"
                },
                "post_debug_task": {
                  "type": "string",
                  "description": "name of task to run after debugging ends"
                },
                "osx": {
                  "$ref": "sublime://settings/debugger#/definitions/debugpy.launch",
                  "description": "MacOS specific configuration attributes"
                },
                "windows": {
                  "$ref": "sublime://settings/debugger#/definitions/debugpy.launch",
                  "description": "Windows specific configuration attributes"
                },
                "linux": {
                  "$ref": "sublime://settings/debugger#/definitions/debugpy.launch",
                  "description": "Linux specific configuration attributes"
                }
              },
              "type": "object"
            },
            "debugger_configuration": {
              "defaultSnippets": [
                {
                  "label": "Python: Current File",
                  "body": {
                    "name": "Python: Current File",
                    "type": "python",
                    "request": "launch",
                    "program": "\\${file}"
                  }
                },
                {
                  "label": "Python: Attach using process id",
                  "body": {
                    "name": "Python: Attach using process id",
                    "type": "python",
                    "request": "launch",
                    "processId": "${1:process id}"
                  }
                }
              ],
              "allOf": [
                {
                  "if": {
                    "$ref": "sublime://settings/debugger#/definitions/type"
                  },
                  "then": {
                    "$ref": "sublime://settings/debugger#/definitions/type_installed"
                  },
                  "else": {
                    "$ref": "sublime://settings/debugger#/definitions/type"
                  }
                },
                {
                  "if": {
                    "properties": {
                      "type": {
                        "const": "debugpy"
                      }
                    },
                    "required": [
                      "type"
                    ]
                  },
                  "then": {
                    "$ref": "sublime://settings/debugger#/definitions/debugpy"
                  }
                },
                {
                  "if": {
                    "properties": {
                      "type": {
                        "const": "python"
                      }
                    },
                    "required": [
                      "type"
                    ]
                  },
                  "then": {
                    "$ref": "sublime://settings/debugger#/definitions/debugpy"
                  }
                },
                {
                  "if": {
                    "properties": {
                      "type": {
                        "const": "debugpy"
                      },
                      "request": {
                        "const": "attach"
                      }
                    },
                    "required": [
                      "name",
                      "type",
                      "request"
                    ]
                  },
                  "then": {
                    "unevaluatedProperties": false,
                    "allOf": [
                      {
                        "$ref": "sublime://settings/debugger#/definitions/type"
                      },
                      {
                        "$ref": "sublime://settings/debugger#/definitions/debugpy"
                      },
                      {
                        "$ref": "sublime://settings/debugger#/definitions/debugpy.attach"
                      }
                    ]
                  }
                },
                {
                  "if": {
                    "properties": {
                      "type": {
                        "const": "python"
                      },
                      "request": {
                        "const": "attach"
                      }
                    },
                    "required": [
                      "name",
                      "type",
                      "request"
                    ]
                  },
                  "then": {
                    "unevaluatedProperties": false,
                    "allOf": [
                      {
                        "$ref": "sublime://settings/debugger#/definitions/type"
                      },
                      {
                        "$ref": "sublime://settings/debugger#/definitions/debugpy"
                      },
                      {
                        "$ref": "sublime://settings/debugger#/definitions/debugpy.attach"
                      }
                    ]
                  }
                },
                {
                  "if": {
                    "properties": {
                      "type": {
                        "const": "debugpy"
                      },
                      "request": {
                        "const": "launch"
                      }
                    },
                    "required": [
                      "name",
                      "type",
                      "request"
                    ]
                  },
                  "then": {
                    "unevaluatedProperties": false,
                    "allOf": [
                      {
                        "$ref": "sublime://settings/debugger#/definitions/type"
                      },
                      {
                        "$ref": "sublime://settings/debugger#/definitions/debugpy"
                      },
                      {
                        "$ref": "sublime://settings/debugger#/definitions/debugpy.launch"
                      }
                    ]
                  }
                },
                {
                  "if": {
                    "properties": {
                      "type": {
                        "const": "python"
                      },
                      "request": {
                        "const": "launch"
                      }
                    },
                    "required": [
                      "name",
                      "type",
                      "request"
                    ]
                  },
                  "then": {
                    "unevaluatedProperties": false,
                    "allOf": [
                      {
                        "$ref": "sublime://settings/debugger#/definitions/type"
                      },
                      {
                        "$ref": "sublime://settings/debugger#/definitions/debugpy"
                      },
                      {
                        "$ref": "sublime://settings/debugger#/definitions/debugpy.launch"
                      }
                    ]
                  }
                }
              ]
            },
            "debugger_compound": {
              "properties": {
                "name": {
                  "type": "string",
                  "description": "Name of compound which appears in the launch configuration drop down menu."
                },
                "configurations": {
                  "type": "array",
                  "description": "Names of configurations that compose this compound configuration",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "name",
                "configurations"
              ]
            },
            "debugger_task": {
              "allOf": [
                {
                  "$ref": "sublime://schemas/sublime-build"
                },
                {
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "Name of task"
                    }
                  },
                  "required": [
                    "name"
                  ]
                }
              ]
            }
          }
        }
      },
      {
        "file_patterns": [
          "/*.sublime-project"
        ],
        "schema": {
          "properties": {
            "debugger_configurations": {
              "description": "Debugger Configurations",
              "type": "array",
              "items": {
                "$ref": "sublime://settings/debugger#/definitions/debugger_configuration"
              }
            },
            "debugger_tasks": {
              "description": "Debugger Tasks",
              "type": "array",
              "items": {
                "$ref": "sublime://settings/debugger#/definitions/debugger_task"
              }
            },
            "debugger_compounds": {
              "description": "Debugger Compounds",
              "type": "array",
              "items": {
                "$ref": "sublime://settings/debugger#/definitions/debugger_compound"
              }
            }
          }
        }
      },
      {
        "file_patterns": [
          "Debugger.sublime-settings"
        ],
        "schema": {
          "additionalProperties": false,
          "properties": {
            "open_at_startup": {
              "type": "boolean",
              "description": "Open the debugger automatically when a project that is set up for debugging"
            },
            "always_keep_visible": {
              "type": "boolean",
              "description": "Always keep the debugger panel visible"
            },
            "font_size": {
              "type": [
                "number",
                "null"
              ],
              "description": "Change the font size of the debugger ui. Defaults to the font size in your preferences."
            },
            "internal_font_scale": {
              "type": "number",
              "description": "Expected values of around 0.95 to 1.05. Only change this if the text/images/content are not aligning correctly within the panels (could cause the last panel to be clipped)."
            },
            "internal_width_modifier": {
              "type": "number",
              "description": "Expected values of around 0 to -5. Only change this if the size of the panels is too large and the last panel is cropped off (adjust internal_font_scale first if text/images/content are not aligned correctly). Negative values make the panels smaller. Postive make them bigger."
            },
            "external_terminal": {
              "type": "string",
              "description": "Which external terminal should be used when an adapter requests an external terminal"
            },
            "minimum_console_height": {
              "type": "number",
              "description": "Controls the minimum height of the debugger output panels in lines"
            },
            "development": {
              "type": "boolean",
              "description": "Additional console logs and some new features are locked behind this flag"
            },
            "node": {
              "type": [
                "string",
                "null"
              ],
              "description": "Sets a specific path for node if not set adapters that require node to run will use whatever is in your path"
            },
            "integrated_output_panels": {
              "type": [
                "object",
                "array"
              ],
              "description": "Output panels outside of the debugger can be integrated into the tabbed debugger interface (note: In some cases output panels may cause issues and not work correctly depending on who owns them)"
            },
            "installed_packages": {
              "type": [
                "object",
                "array"
              ],
              "description": "Some debug adapters require certain packages to be installed via package control. If you have installed these package outside of package control then you can add them to this list and they will be treated as if they are installed."
            },
            "global_debugger_configurations": {
              "type": "array",
              "items": {
                "$ref": "sublime://settings/debugger#/definitions/debugger_configuration"
              },
              "description": "Global debugger configurations that are accessible from every project"
            },
            "global_debugger_tasks": {
              "type": "array",
              "items": {
                "$ref": "sublime://settings/debugger#/definitions/debugger_task"
              },
              "description": "Global debugger tasks that are accessible from every project"
            },
            "global_debugger_compounds": {
              "type": "array",
              "items": {
                "$ref": "sublime://settings/debugger#/definitions/debugger_compound"
              },
              "description": "Global debugger compounds that are accessible from every project"
            },
            "github_personal_access_token": {
              "type": [
                "string",
                "null"
              ],
              "description": "Personal access token used for github api requests. If you are testing installing adapters you may need to set this to have higher api limits if you are getting 429 errors."
            },
            "lldb_display_format": {
              "type": "string",
              "description": ""
            },
            "lldb_dereference_pointers": {
              "type": "boolean",
              "description": ""
            },
            "lldb_library": {
              "type": [
                "string",
                "null"
              ],
              "description": "Which lldb library to use"
            },
            "go_dlv": {
              "type": [
                "string",
                "null"
              ],
              "description": "Sets a specific path for dlv if not set go will use whatever is in your path"
            }
          }
        }
      }
    ]
  }
}